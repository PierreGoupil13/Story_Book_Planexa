{
    "pipes": [],
    "interfaces": [
        {
            "name": "NavigationBarConfig",
            "id": "interface-NavigationBarConfig-12d68265e03b3d6ecf2227ff2f2de12b2b6a2a9c30463857bcc2b6ed09f0edd75becb7112481f869625b31a2f658936c6040db469b50b2ca18e5300220d3065c",
            "file": "src/stories/Planexa/navigation-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SegmentedControlComponent, TabItem } from './segmented-control.component';\n\nexport interface NavigationBarConfig {\n  title: string;\n  viewModes: TabItem[];\n  activeViewMode: string;\n  showTodayButton?: boolean;\n  todayButtonText?: string;\n  primaryButtonText?: string;\n  showPrimaryButton?: boolean;\n}\n\n@Component({\n  selector: 'storybook-navigation-bar',\n  standalone: true,\n  imports: [CommonModule, SegmentedControlComponent],\n  template: `\n    <div class=\"navigation-bar\">\n      <!-- Section gauche : Titre et navigation -->\n      <div class=\"left-section\">\n        <h2 class=\"title\">{{ config.title }}</h2>\n        <div class=\"nav-buttons\">\n          <button \n            class=\"nav-button nav-button--left\" \n            (click)=\"onPreviousClick()\"\n            [attr.aria-label]=\"'Période précédente'\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M10.75 12.25L10.131 11.6312L6.894 8.375H14.5V7.125H6.894L10.131 3.8687L10.75 3.25L6.5 7L10.75 12.25Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n          <button \n            class=\"nav-button nav-button--right\" \n            (click)=\"onNextClick()\"\n            [attr.aria-label]=\"'Période suivante'\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M5.25 3.75L5.869 4.3687L9.106 7.625H1.5V8.875H9.106L5.869 12.1312L5.25 12.75L9.5 9L5.25 3.75Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <!-- Section centre : Contrôle segmenté -->\n      <div class=\"center-section\">\n        <storybook-segmented-control\n          [tabs]=\"config.viewModes\"\n          [activeTabId]=\"config.activeViewMode\"\n          [width]=\"300\"\n          (tabChange)=\"onViewModeChange($event)\"\n        ></storybook-segmented-control>\n      </div>\n\n      <!-- Section droite : Boutons d'action -->\n      <div class=\"right-section\">\n        <button \n          *ngIf=\"config.showTodayButton\" \n          class=\"action-button action-button--secondary\"\n          (click)=\"onTodayClick()\"\n        >\n          {{ config.todayButtonText || 'Aujourd\\'hui' }}\n        </button>\n        \n        <button \n          *ngIf=\"config.showPrimaryButton\" \n          class=\"action-button action-button--primary\"\n          (click)=\"onPrimaryButtonClick()\"\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" class=\"button-icon\">\n            <circle cx=\"8\" cy=\"8\" r=\"7.25\" stroke=\"currentColor\" stroke-width=\"1.5\"/>\n            <path d=\"M8 4.5V11.5M4.5 8H11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n          </svg>\n          {{ config.primaryButtonText || 'Nouveau RDV' }}\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./navigation-bar.component.css'],\n})\nexport class NavigationBarComponent {\n  /** Configuration de la barre de navigation */\n  @Input()\n  config: NavigationBarConfig = {\n    title: 'Juillet 2025',\n    viewModes: [\n      { id: 'month', label: 'Mois', icon: false },\n      { id: 'week', label: 'Semaine', icon: false },\n      { id: 'day', label: 'Jour', icon: false }\n    ],\n    activeViewMode: 'month',\n    showTodayButton: true,\n    todayButtonText: 'Aujourd\\'hui',\n    primaryButtonText: 'Nouveau RDV',\n    showPrimaryButton: true\n  };\n\n  /** Événements */\n  @Output()\n  previousClick = new EventEmitter<void>();\n\n  @Output()\n  nextClick = new EventEmitter<void>();\n\n  @Output()\n  viewModeChange = new EventEmitter<TabItem>();\n\n  @Output()\n  todayClick = new EventEmitter<void>();\n\n  @Output()\n  primaryButtonClick = new EventEmitter<void>();\n\n  onPreviousClick(): void {\n    this.previousClick.emit();\n  }\n\n  onNextClick(): void {\n    this.nextClick.emit();\n  }\n\n  onViewModeChange(tab: TabItem): void {\n    this.config.activeViewMode = tab.id;\n    this.viewModeChange.emit(tab);\n  }\n\n  onTodayClick(): void {\n    this.todayClick.emit();\n  }\n\n  onPrimaryButtonClick(): void {\n    this.primaryButtonClick.emit();\n  }\n}\n",
            "properties": [
                {
                    "name": "activeViewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "primaryButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "showPrimaryButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showTodayButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "todayButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "viewModes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TabItem",
            "id": "interface-TabItem-7978fde189c8389e6653da016a147a6ca0c5f62d9d24ce13eb6bba0b5b583cf24302340d8e20c63797570f6a954316c0f8125d5cc079cc6d951abadcac947c52",
            "file": "src/stories/Planexa/segmented-control.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\nexport interface TabItem {\n  id: string;\n  label: string;\n  icon?: 'calendar' | 'patient' | 'hexagon' | false;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'storybook-segmented-control',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"segmented-control\" [style.width.px]=\"width\">\n      <div \n        *ngFor=\"let tab of tabs; trackBy: trackByFn; let i = index\"\n        class=\"segment\"\n        [class.active]=\"tab.id === activeTabId\"\n        [class.disabled]=\"tab.disabled\"\n        (click)=\"selectTab(tab)\"\n        [attr.data-testid]=\"'segment-' + tab.id\"\n      >\n        <!-- Icône hexagonale -->\n        <div *ngIf=\"tab.icon !== false\" class=\"segment-icon\">\n          <!-- Icône Calendrier -->\n          <svg *ngIf=\"tab.icon === 'calendar'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M4 1V3M12 1V3M2 5H14M3 3H13C13.5523 3 14 3.44772 14 4V13C14 13.5523 13.5523 14 13 14H3C2.44772 14 2 13.5523 2 13V4C2 3.44772 2.44772 3 3 3Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <circle cx=\"6\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"10\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"6\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"10\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n          </svg>\n          \n          <!-- Icône Patient -->\n          <svg *ngIf=\"tab.icon === 'patient'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <circle cx=\"8\" cy=\"4\" r=\"2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\"/>\n            <path d=\"M3 14C3 11.2386 5.23858 9 8 9C10.7614 9 13 11.2386 13 14\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n            <path d=\"M7 12H9M8 11V13\" stroke=\"currentColor\" stroke-width=\"1.2\" stroke-linecap=\"round\"/>\n          </svg>\n          \n          <!-- Icône Hexagonale (original) -->\n          <svg *ngIf=\"tab.icon === 'hexagon' || tab.icon === true\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M8.252 4.0679L2.252 0.567901C2.17554 0.523334 2.08859 0.499756 2 0.499756C1.91141 0.499756 1.82446 0.523334 1.748 0.567901L-4.252 4.0679C-4.32754 4.11196 -4.39013 4.17496 -4.43363 4.25084C-4.47714 4.32672 -4.5 4.41254 -4.5 4.4999V11.4999C-4.5 11.5873 -4.47714 11.6732 -4.43363 11.749C-4.39013 11.8248 -4.32754 11.8879 -4.252 11.9319L1.748 15.4319C1.82446 15.4765 1.91141 15.5001 2 15.5001C2.08859 15.5001 2.17554 15.4765 2.252 15.4319L8.252 11.9319C8.32754 11.8879 8.39013 11.8248 8.43363 11.749C8.47714 11.6732 8.5 11.5873 8.5 11.4999V4.4999C8.5 4.41254 8.47714 4.32672 8.43363 4.25084C8.39013 4.17496 8.32754 4.11196 8.252 4.0679ZM2 1.5789L7.008 4.4999L2 7.4209L-3.008 4.4999L2 1.5789ZM-3.5 5.3699L1.5 8.2864V14.1299L-3.5 11.2129V5.3699ZM2.5 14.1299V8.2869L7.5 5.3704V11.2129L2.5 14.1299Z\" fill=\"currentColor\"/>\n          </svg>\n        </div>\n        \n        <!-- Label du segment -->\n        <span class=\"segment-label\">{{ tab.label }}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./segmented-control.component.css'],\n})\nexport class SegmentedControlComponent {\n  /** Liste des onglets */\n  @Input()\n  tabs: TabItem[] = [\n    { id: 'segment1', label: 'Calendrier', icon: 'calendar' },\n    { id: 'segment2', label: 'Patient', icon: 'patient' },\n    { id: 'segment3', label: 'Hexagone', icon: 'hexagon' },\n    { id: 'segment4', label: 'Sans icône', icon: false }\n  ];\n\n  /** ID de l'onglet actif */\n  @Input()\n  activeTabId?: string;\n\n  /** Largeur du composant */\n  @Input()\n  width: number = 850;\n\n  /** Événement de changement d'onglet */\n  @Output()\n  tabChange = new EventEmitter<TabItem>();\n\n  ngOnInit() {\n    // Sélectionner le premier onglet par défaut si aucun n'est actif\n    if (!this.activeTabId && this.tabs.length > 0) {\n      this.activeTabId = this.tabs[0].id;\n    }\n  }\n\n  selectTab(tab: TabItem): void {\n    if (tab.disabled) return;\n    \n    this.activeTabId = tab.id;\n    this.tabChange.emit(tab);\n  }\n\n  trackByFn(index: number, item: TabItem): string {\n    return item.id;\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"calendar\" | \"patient\" | \"hexagon\" | ",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-f11819611541114a1e7df3dd63a308744a998e1e765790bfef32f16f4ca945843ef645839cb750d541f08bb7cddbab930e0583800e91eace64639ad10d806deb",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('storybook-angular-project')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected readonly title = signal('storybook-angular-project');\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced.  * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    --bright-blue: oklch(51.01% 0.274 263.83);\n    --electric-violet: oklch(53.18% 0.28 296.97);\n    --french-violet: oklch(47.66% 0.246 305.88);\n    --vivid-pink: oklch(69.02% 0.277 332.77);\n    --hot-red: oklch(61.42% 0.238 15.34);\n    --orange-red: oklch(63.32% 0.24 31.68);\n\n    --gray-900: oklch(19.37% 0.006 300.98);\n    --gray-700: oklch(36.98% 0.014 302.71);\n    --gray-400: oklch(70.9% 0.015 304.04);\n\n    --red-to-pink-to-purple-vertical-gradient: linear-gradient(\n      180deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(\n      90deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --pill-accent: var(--bright-blue);\n\n    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1 {\n    font-size: 3.125rem;\n    color: var(--gray-900);\n    font-weight: 500;\n    line-height: 100%;\n    letter-spacing: -0.125rem;\n    margin: 0;\n    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n  }\n\n  p {\n    margin: 0;\n    color: var(--gray-700);\n  }\n\n  main {\n    width: 100%;\n    min-height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n    box-sizing: inherit;\n    position: relative;\n  }\n\n  .angular-logo {\n    max-width: 9.2rem;\n  }\n\n  .content {\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    max-width: 700px;\n    margin-bottom: 3rem;\n  }\n\n  .content h1 {\n    margin-top: 1.75rem;\n  }\n\n  .content p {\n    margin-top: 1.5rem;\n  }\n\n  .divider {\n    width: 1px;\n    background: var(--red-to-pink-to-purple-vertical-gradient);\n    margin-inline: 0.5rem;\n  }\n\n  .pill-group {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    flex-wrap: wrap;\n    gap: 1.25rem;\n  }\n\n  .pill {\n    display: flex;\n    align-items: center;\n    --pill-accent: var(--bright-blue);\n    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);\n    color: var(--pill-accent);\n    padding-inline: 0.75rem;\n    padding-block: 0.375rem;\n    border-radius: 2.75rem;\n    border: 0;\n    transition: background 0.3s ease;\n    font-family: var(--inter-font);\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.4rem;\n    letter-spacing: -0.00875rem;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n\n  .pill:hover {\n    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);\n  }\n\n  .pill-group .pill:nth-child(6n + 1) {\n    --pill-accent: var(--bright-blue);\n  }\n  .pill-group .pill:nth-child(6n + 2) {\n    --pill-accent: var(--electric-violet);\n  }\n  .pill-group .pill:nth-child(6n + 3) {\n    --pill-accent: var(--french-violet);\n  }\n\n  .pill-group .pill:nth-child(6n + 4),\n  .pill-group .pill:nth-child(6n + 5),\n  .pill-group .pill:nth-child(6n + 6) {\n    --pill-accent: var(--hot-red);\n  }\n\n  .pill-group svg {\n    margin-inline-start: 0.25rem;\n  }\n\n  .social-links {\n    display: flex;\n    align-items: center;\n    gap: 0.73rem;\n    margin-top: 1.5rem;\n  }\n\n  .social-links path {\n    transition: fill 0.3s ease;\n    fill: var(--gray-400);\n  }\n\n  .social-links a:hover svg path {\n    fill: var(--gray-900);\n  }\n\n  @media screen and (max-width: 650px) {\n    .content {\n      flex-direction: column;\n      width: max-content;\n    }\n\n    .divider {\n      height: 1px;\n      width: 100%;\n      background: var(--red-to-pink-to-purple-horizontal-gradient);\n      margin-block: 1.5rem;\n    }\n  }\n</style>\n\n<main class=\"main\">\n  <div class=\"content\">\n    <div class=\"left-side\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 982 239\"\n        fill=\"none\"\n        class=\"angular-logo\"\n      >\n        <g clip-path=\"url(#a)\">\n          <path\n            fill=\"url(#b)\"\n            d=\"M388.676 191.625h30.849L363.31 31.828h-35.758l-56.215 159.797h30.848l13.174-39.356h60.061l13.256 39.356Zm-65.461-62.675 21.602-64.311h1.227l21.602 64.311h-44.431Zm126.831-7.527v70.202h-28.23V71.839h27.002v20.374h1.392c2.782-6.71 7.2-12.028 13.255-15.956 6.056-3.927 13.584-5.89 22.503-5.89 8.264 0 15.465 1.8 21.684 5.318 6.137 3.518 10.964 8.673 14.319 15.382 3.437 6.71 5.074 14.81 4.992 24.383v76.175h-28.23v-71.92c0-8.019-2.046-14.237-6.219-18.819-4.173-4.5-9.819-6.791-17.102-6.791-4.91 0-9.328 1.063-13.174 3.272-3.846 2.128-6.792 5.237-9.001 9.328-2.046 4.009-3.191 8.918-3.191 14.728ZM589.233 239c-10.147 0-18.82-1.391-26.103-4.091-7.282-2.7-13.092-6.382-17.511-10.964-4.418-4.582-7.528-9.655-9.164-15.219l25.448-6.136c1.145 2.372 2.782 4.663 4.991 6.954 2.209 2.291 5.155 4.255 8.837 5.81 3.683 1.554 8.428 2.291 14.074 2.291 8.019 0 14.647-1.964 19.884-5.81 5.237-3.845 7.856-10.227 7.856-19.064v-22.665h-1.391c-1.473 2.946-3.601 5.892-6.383 9.001-2.782 3.109-6.464 5.645-10.965 7.691-4.582 2.046-10.228 3.109-17.101 3.109-9.165 0-17.511-2.209-25.039-6.545-7.446-4.337-13.42-10.883-17.757-19.474-4.418-8.673-6.628-19.473-6.628-32.565 0-13.091 2.21-24.301 6.628-33.383 4.419-9.082 10.311-15.955 17.839-20.7 7.528-4.746 15.874-7.037 25.039-7.037 7.037 0 12.846 1.145 17.347 3.518 4.582 2.373 8.182 5.236 10.883 8.51 2.7 3.272 4.746 6.382 6.137 9.327h1.554v-19.8h27.821v121.749c0 10.228-2.454 18.737-7.364 25.447-4.91 6.709-11.538 11.7-20.048 15.055-8.509 3.355-18.165 4.991-28.884 4.991Zm.245-71.266c5.974 0 11.047-1.473 15.302-4.337 4.173-2.945 7.446-7.118 9.573-12.519 2.21-5.482 3.274-12.027 3.274-19.637 0-7.609-1.064-14.155-3.274-19.8-2.127-5.646-5.318-10.064-9.491-13.255-4.174-3.11-9.329-4.746-15.384-4.746s-11.537 1.636-15.792 4.91c-4.173 3.272-7.365 7.772-9.492 13.418-2.128 5.727-3.191 12.191-3.191 19.392 0 7.2 1.063 13.745 3.273 19.228 2.127 5.482 5.318 9.736 9.573 12.764 4.174 3.027 9.41 4.582 15.629 4.582Zm141.56-26.51V71.839h28.23v119.786h-27.412v-21.273h-1.227c-2.7 6.709-7.119 12.191-13.338 16.446-6.137 4.255-13.747 6.382-22.748 6.382-7.855 0-14.81-1.718-20.783-5.237-5.974-3.518-10.72-8.591-14.075-15.382-3.355-6.709-5.073-14.891-5.073-24.464V71.839h28.312v71.921c0 7.609 2.046 13.664 6.219 18.083 4.173 4.5 9.655 6.709 16.365 6.709 4.173 0 8.183-.982 12.111-3.028 3.927-2.045 7.118-5.072 9.655-9.082 2.537-4.091 3.764-9.164 3.764-15.218Zm65.707-109.395v159.796h-28.23V31.828h28.23Zm44.841 162.169c-7.61 0-14.402-1.391-20.457-4.091-6.055-2.7-10.883-6.791-14.32-12.109-3.518-5.319-5.237-11.946-5.237-19.801 0-6.791 1.228-12.355 3.765-16.773 2.536-4.419 5.891-7.937 10.228-10.637 4.337-2.618 9.164-4.664 14.647-6.055 5.4-1.391 11.046-2.373 16.856-3.027 7.037-.737 12.683-1.391 17.102-1.964 4.337-.573 7.528-1.555 9.574-2.782 1.963-1.309 3.027-3.273 3.027-5.973v-.491c0-5.891-1.718-10.391-5.237-13.664-3.518-3.191-8.51-4.828-15.056-4.828-6.955 0-12.356 1.473-16.447 4.5-4.009 3.028-6.71 6.546-8.183 10.719l-26.348-3.764c2.046-7.282 5.483-13.336 10.31-18.328 4.746-4.909 10.638-8.59 17.511-11.045 6.955-2.455 14.565-3.682 22.912-3.682 5.809 0 11.537.654 17.265 2.045s10.965 3.6 15.711 6.71c4.746 3.109 8.51 7.282 11.455 12.6 2.864 5.318 4.337 11.946 4.337 19.883v80.184h-27.166v-16.446h-.9c-1.719 3.355-4.092 6.464-7.201 9.328-3.109 2.864-6.955 5.237-11.619 6.955-4.828 1.718-10.229 2.536-16.529 2.536Zm7.364-20.701c5.646 0 10.556-1.145 14.729-3.354 4.173-2.291 7.364-5.237 9.655-9.001 2.292-3.763 3.355-7.854 3.355-12.273v-14.155c-.9.737-2.373 1.391-4.5 2.046-2.128.654-4.419 1.145-7.037 1.636-2.619.491-5.155.9-7.692 1.227-2.537.328-4.746.655-6.628.901-4.173.572-8.019 1.472-11.292 2.781-3.355 1.31-5.973 3.11-7.855 5.401-1.964 2.291-2.864 5.318-2.864 8.918 0 5.237 1.882 9.164 5.728 11.782 3.682 2.782 8.51 4.091 14.401 4.091Zm64.643 18.328V71.839h27.412v19.965h1.227c2.21-6.955 5.974-12.274 11.292-16.038 5.319-3.763 11.456-5.645 18.329-5.645 1.555 0 3.355.082 5.237.163 1.964.164 3.601.328 4.91.573v25.938c-1.227-.41-3.109-.819-5.646-1.146a58.814 58.814 0 0 0-7.446-.49c-5.155 0-9.738 1.145-13.829 3.354-4.091 2.209-7.282 5.236-9.655 9.164-2.373 3.927-3.519 8.427-3.519 13.5v70.448h-28.312ZM222.077 39.192l-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z\"\n          />\n          <path\n            fill=\"url(#c)\"\n            d=\"M388.676 191.625h30.849L363.31 31.828h-35.758l-56.215 159.797h30.848l13.174-39.356h60.061l13.256 39.356Zm-65.461-62.675 21.602-64.311h1.227l21.602 64.311h-44.431Zm126.831-7.527v70.202h-28.23V71.839h27.002v20.374h1.392c2.782-6.71 7.2-12.028 13.255-15.956 6.056-3.927 13.584-5.89 22.503-5.89 8.264 0 15.465 1.8 21.684 5.318 6.137 3.518 10.964 8.673 14.319 15.382 3.437 6.71 5.074 14.81 4.992 24.383v76.175h-28.23v-71.92c0-8.019-2.046-14.237-6.219-18.819-4.173-4.5-9.819-6.791-17.102-6.791-4.91 0-9.328 1.063-13.174 3.272-3.846 2.128-6.792 5.237-9.001 9.328-2.046 4.009-3.191 8.918-3.191 14.728ZM589.233 239c-10.147 0-18.82-1.391-26.103-4.091-7.282-2.7-13.092-6.382-17.511-10.964-4.418-4.582-7.528-9.655-9.164-15.219l25.448-6.136c1.145 2.372 2.782 4.663 4.991 6.954 2.209 2.291 5.155 4.255 8.837 5.81 3.683 1.554 8.428 2.291 14.074 2.291 8.019 0 14.647-1.964 19.884-5.81 5.237-3.845 7.856-10.227 7.856-19.064v-22.665h-1.391c-1.473 2.946-3.601 5.892-6.383 9.001-2.782 3.109-6.464 5.645-10.965 7.691-4.582 2.046-10.228 3.109-17.101 3.109-9.165 0-17.511-2.209-25.039-6.545-7.446-4.337-13.42-10.883-17.757-19.474-4.418-8.673-6.628-19.473-6.628-32.565 0-13.091 2.21-24.301 6.628-33.383 4.419-9.082 10.311-15.955 17.839-20.7 7.528-4.746 15.874-7.037 25.039-7.037 7.037 0 12.846 1.145 17.347 3.518 4.582 2.373 8.182 5.236 10.883 8.51 2.7 3.272 4.746 6.382 6.137 9.327h1.554v-19.8h27.821v121.749c0 10.228-2.454 18.737-7.364 25.447-4.91 6.709-11.538 11.7-20.048 15.055-8.509 3.355-18.165 4.991-28.884 4.991Zm.245-71.266c5.974 0 11.047-1.473 15.302-4.337 4.173-2.945 7.446-7.118 9.573-12.519 2.21-5.482 3.274-12.027 3.274-19.637 0-7.609-1.064-14.155-3.274-19.8-2.127-5.646-5.318-10.064-9.491-13.255-4.174-3.11-9.329-4.746-15.384-4.746s-11.537 1.636-15.792 4.91c-4.173 3.272-7.365 7.772-9.492 13.418-2.128 5.727-3.191 12.191-3.191 19.392 0 7.2 1.063 13.745 3.273 19.228 2.127 5.482 5.318 9.736 9.573 12.764 4.174 3.027 9.41 4.582 15.629 4.582Zm141.56-26.51V71.839h28.23v119.786h-27.412v-21.273h-1.227c-2.7 6.709-7.119 12.191-13.338 16.446-6.137 4.255-13.747 6.382-22.748 6.382-7.855 0-14.81-1.718-20.783-5.237-5.974-3.518-10.72-8.591-14.075-15.382-3.355-6.709-5.073-14.891-5.073-24.464V71.839h28.312v71.921c0 7.609 2.046 13.664 6.219 18.083 4.173 4.5 9.655 6.709 16.365 6.709 4.173 0 8.183-.982 12.111-3.028 3.927-2.045 7.118-5.072 9.655-9.082 2.537-4.091 3.764-9.164 3.764-15.218Zm65.707-109.395v159.796h-28.23V31.828h28.23Zm44.841 162.169c-7.61 0-14.402-1.391-20.457-4.091-6.055-2.7-10.883-6.791-14.32-12.109-3.518-5.319-5.237-11.946-5.237-19.801 0-6.791 1.228-12.355 3.765-16.773 2.536-4.419 5.891-7.937 10.228-10.637 4.337-2.618 9.164-4.664 14.647-6.055 5.4-1.391 11.046-2.373 16.856-3.027 7.037-.737 12.683-1.391 17.102-1.964 4.337-.573 7.528-1.555 9.574-2.782 1.963-1.309 3.027-3.273 3.027-5.973v-.491c0-5.891-1.718-10.391-5.237-13.664-3.518-3.191-8.51-4.828-15.056-4.828-6.955 0-12.356 1.473-16.447 4.5-4.009 3.028-6.71 6.546-8.183 10.719l-26.348-3.764c2.046-7.282 5.483-13.336 10.31-18.328 4.746-4.909 10.638-8.59 17.511-11.045 6.955-2.455 14.565-3.682 22.912-3.682 5.809 0 11.537.654 17.265 2.045s10.965 3.6 15.711 6.71c4.746 3.109 8.51 7.282 11.455 12.6 2.864 5.318 4.337 11.946 4.337 19.883v80.184h-27.166v-16.446h-.9c-1.719 3.355-4.092 6.464-7.201 9.328-3.109 2.864-6.955 5.237-11.619 6.955-4.828 1.718-10.229 2.536-16.529 2.536Zm7.364-20.701c5.646 0 10.556-1.145 14.729-3.354 4.173-2.291 7.364-5.237 9.655-9.001 2.292-3.763 3.355-7.854 3.355-12.273v-14.155c-.9.737-2.373 1.391-4.5 2.046-2.128.654-4.419 1.145-7.037 1.636-2.619.491-5.155.9-7.692 1.227-2.537.328-4.746.655-6.628.901-4.173.572-8.019 1.472-11.292 2.781-3.355 1.31-5.973 3.11-7.855 5.401-1.964 2.291-2.864 5.318-2.864 8.918 0 5.237 1.882 9.164 5.728 11.782 3.682 2.782 8.51 4.091 14.401 4.091Zm64.643 18.328V71.839h27.412v19.965h1.227c2.21-6.955 5.974-12.274 11.292-16.038 5.319-3.763 11.456-5.645 18.329-5.645 1.555 0 3.355.082 5.237.163 1.964.164 3.601.328 4.91.573v25.938c-1.227-.41-3.109-.819-5.646-1.146a58.814 58.814 0 0 0-7.446-.49c-5.155 0-9.738 1.145-13.829 3.354-4.091 2.209-7.282 5.236-9.655 9.164-2.373 3.927-3.519 8.427-3.519 13.5v70.448h-28.312ZM222.077 39.192l-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z\"\n          />\n        </g>\n        <defs>\n          <radialGradient\n            id=\"c\"\n            cx=\"0\"\n            cy=\"0\"\n            r=\"1\"\n            gradientTransform=\"rotate(118.122 171.182 60.81) scale(205.794)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stop-color=\"#FF41F8\" />\n            <stop offset=\".707\" stop-color=\"#FF41F8\" stop-opacity=\".5\" />\n            <stop offset=\"1\" stop-color=\"#FF41F8\" stop-opacity=\"0\" />\n          </radialGradient>\n          <linearGradient\n            id=\"b\"\n            x1=\"0\"\n            x2=\"982\"\n            y1=\"192\"\n            y2=\"192\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stop-color=\"#F0060B\" />\n            <stop offset=\"0\" stop-color=\"#F0070C\" />\n            <stop offset=\".526\" stop-color=\"#CC26D5\" />\n            <stop offset=\"1\" stop-color=\"#7702FF\" />\n          </linearGradient>\n          <clipPath id=\"a\"><path fill=\"#fff\" d=\"M0 0h982v239H0z\" /></clipPath>\n        </defs>\n      </svg>\n      <h1>Hello, {{ title() }}</h1>\n      <p>Congratulations! Your app is running. 🎉</p>\n    </div>\n    <div class=\"divider\" role=\"separator\" aria-label=\"Divider\"></div>\n    <div class=\"right-side\">\n      <div class=\"pill-group\">\n        @for (item of [\n          { title: 'Explore the Docs', link: 'https://angular.dev' },\n          { title: 'Learn with Tutorials', link: 'https://angular.dev/tutorials' },\n          { title: 'Prompt and best practices for AI', link: 'https://angular.dev/ai/develop-with-ai'},\n          { title: 'CLI Docs', link: 'https://angular.dev/tools/cli' },\n          { title: 'Angular Language Service', link: 'https://angular.dev/tools/language-service' },\n          { title: 'Angular DevTools', link: 'https://angular.dev/tools/devtools' },\n        ]; track item.title) {\n          <a\n            class=\"pill\"\n            [href]=\"item.link\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <span>{{ item.title }}</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              height=\"14\"\n              viewBox=\"0 -960 960 960\"\n              width=\"14\"\n              fill=\"currentColor\"\n            >\n              <path\n                d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z\"\n              />\n            </svg>\n          </a>\n        }\n      </div>\n      <div class=\"social-links\">\n        <a\n          href=\"https://github.com/angular/angular\"\n          aria-label=\"Github\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <svg\n            width=\"25\"\n            height=\"24\"\n            viewBox=\"0 0 25 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            alt=\"Github\"\n          >\n            <path\n              d=\"M12.3047 0C5.50634 0 0 5.50942 0 12.3047C0 17.7423 3.52529 22.3535 8.41332 23.9787C9.02856 24.0946 9.25414 23.7142 9.25414 23.3871C9.25414 23.0949 9.24389 22.3207 9.23876 21.2953C5.81601 22.0377 5.09414 19.6444 5.09414 19.6444C4.53427 18.2243 3.72524 17.8449 3.72524 17.8449C2.61064 17.082 3.81137 17.0973 3.81137 17.0973C5.04697 17.1835 5.69604 18.3647 5.69604 18.3647C6.79321 20.2463 8.57636 19.7029 9.27978 19.3881C9.39052 18.5924 9.70736 18.0499 10.0591 17.7423C7.32641 17.4347 4.45429 16.3765 4.45429 11.6618C4.45429 10.3185 4.9311 9.22133 5.72065 8.36C5.58222 8.04931 5.16694 6.79833 5.82831 5.10337C5.82831 5.10337 6.85883 4.77319 9.2121 6.36459C10.1965 6.09082 11.2424 5.95546 12.2883 5.94931C13.3342 5.95546 14.3801 6.09082 15.3644 6.36459C17.7023 4.77319 18.7328 5.10337 18.7328 5.10337C19.3942 6.79833 18.9789 8.04931 18.8559 8.36C19.6403 9.22133 20.1171 10.3185 20.1171 11.6618C20.1171 16.3888 17.2409 17.4296 14.5031 17.7321C14.9338 18.1012 15.3337 18.8559 15.3337 20.0084C15.3337 21.6552 15.3183 22.978 15.3183 23.3779C15.3183 23.7009 15.5336 24.0854 16.1642 23.9623C21.0871 22.3484 24.6094 17.7341 24.6094 12.3047C24.6094 5.50942 19.0999 0 12.3047 0Z\"\n            />\n          </svg>\n        </a>\n        <a\n          href=\"https://twitter.com/angular\"\n          aria-label=\"Twitter\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            alt=\"Twitter\"\n          >\n            <path\n              d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"\n            />\n          </svg>\n        </a>\n        <a\n          href=\"https://www.youtube.com/channel/UCbn1OgGei-DV7aSRo_HaAiw\"\n          aria-label=\"Youtube\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <svg\n            width=\"29\"\n            height=\"20\"\n            viewBox=\"0 0 29 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            alt=\"Youtube\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M27.4896 1.52422C27.9301 1.96749 28.2463 2.51866 28.4068 3.12258C29.0004 5.35161 29.0004 10 29.0004 10C29.0004 10 29.0004 14.6484 28.4068 16.8774C28.2463 17.4813 27.9301 18.0325 27.4896 18.4758C27.0492 18.9191 26.5 19.2389 25.8972 19.4032C23.6778 20 14.8068 20 14.8068 20C14.8068 20 5.93586 20 3.71651 19.4032C3.11363 19.2389 2.56449 18.9191 2.12405 18.4758C1.68361 18.0325 1.36732 17.4813 1.20683 16.8774C0.613281 14.6484 0.613281 10 0.613281 10C0.613281 10 0.613281 5.35161 1.20683 3.12258C1.36732 2.51866 1.68361 1.96749 2.12405 1.52422C2.56449 1.08095 3.11363 0.76113 3.71651 0.596774C5.93586 0 14.8068 0 14.8068 0C14.8068 0 23.6778 0 25.8972 0.596774C26.5 0.76113 27.0492 1.08095 27.4896 1.52422ZM19.3229 10L11.9036 5.77905V14.221L19.3229 10Z\"\n            />\n          </svg>\n        </a>\n      </div>\n    </div>\n  </div>\n</main>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced.  * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder  * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n<router-outlet />\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-70e23996430e5463419418abce2843faf758eef801fbec7d13ac0b01640867f87b61619b405bdead52dbcaf33bd5c3f52cb1d917f1ad5912d5850badefdb84e3",
            "file": "src/stories/Planexa/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-dropdown",
            "styleUrls": [
                "./dropdown.component.css"
            ],
            "styles": [],
            "template": "<div class=\"dropdown-container\" *ngIf=\"isOpen\">\n  <div class=\"dropdown-list\">\n    <div\n      *ngFor=\"let item of items; trackBy: trackByFn\"\n      class=\"dropdown-item\"\n      (click)=\"selectItem(item)\"\n      [class.selected]=\"item === selectedItem\">\n      {{ item }}\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉtat ouvert/fermé",
                    "description": "<p>État ouvert/fermé</p>\n",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListe des éléments à afficher",
                    "description": "<p>Liste des éléments à afficher</p>\n",
                    "line": 26,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉlément sélectionné",
                    "description": "<p>Élément sélectionné</p>\n",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeDropdown",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénement pour fermer le dropdown",
                    "description": "<p>Événement pour fermer le dropdown</p>\n",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "itemSelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénement quand un élément est sélectionné",
                    "description": "<p>Événement quand un élément est sélectionné</p>\n",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "selectItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"dropdown-container\" *ngIf=\"isOpen\">\n      <div class=\"dropdown-list\">\n        <div \n          *ngFor=\"let item of items; trackBy: trackByFn\" \n          class=\"dropdown-item\"\n          (click)=\"selectItem(item)\"\n          [class.selected]=\"item === selectedItem\">\n          {{ item }}\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./dropdown.component.css'],\n})\nexport class DropdownComponent {\n  /** Liste des éléments à afficher */\n  @Input()\n  items: string[] = [];\n\n  /** État ouvert/fermé */\n  @Input()\n  isOpen: boolean = false;\n\n  /** Élément sélectionné */\n  @Input()\n  selectedItem?: string;\n\n  /** Événement quand un élément est sélectionné */\n  @Output()\n  itemSelected = new EventEmitter<string>();\n\n  /** Événement pour fermer le dropdown */\n  @Output()\n  closeDropdown = new EventEmitter<void>();\n\n  selectItem(item: string): void {\n    this.selectedItem = item;\n    this.itemSelected.emit(item);\n    this.closeDropdown.emit();\n  }\n\n  trackByFn(index: number, item: string): string {\n    return item;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dropdown-container {\n  position: absolute;\n  top: 48px; /* Position juste en dessous de l'input field (44px hauteur + 4px marge) */\n  left: 0;\n  right: 0;\n  z-index: 1000;\n}\n\n.dropdown-list {\n  background: white;\n  border: 1px solid #D1D5DB;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.dropdown-item {\n  padding: 12px 16px;\n  cursor: pointer;\n  font-size: 14px;\n  color: #374151;\n  border-bottom: 1px solid #F3F4F6;\n  transition: background-color 0.2s ease;\n}\n\n.dropdown-item:last-child {\n  border-bottom: none;\n}\n\n.dropdown-item:hover {\n  background-color: #F9FAFB;\n}\n\n.dropdown-item.selected {\n  background-color: #EBF8FF;\n  color: #1D4ED8;\n  font-weight: 500;\n}\n\n.dropdown-item.selected:hover {\n  background-color: #DBEAFE;\n}\n",
                    "styleUrl": "./dropdown.component.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "InputDropdownComponent",
            "id": "component-InputDropdownComponent-9551b52bf43dffd1d2eb99b364d13b5eab76f4003ca3ebb63c68f05c5b2b0b6abdb8c4cd565e4d234f751a091474799dcdb281de72c166ba146c12a88d82f6d5",
            "file": "src/stories/Planexa/input-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input-dropdown",
            "styleUrls": [],
            "styles": [
                "\n    .input-dropdown-wrapper {\n      width: 368px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n    }\n    \n    .input-label {\n      font-size: 14px;\n      font-weight: 500;\n      color: #111827;\n      margin: 0 0 8px 0;\n      display: block;\n      line-height: 1.4;\n    }\n    \n    .input-field-container {\n      position: relative;\n      margin-bottom: 8px;\n    }\n    \n    .supporting-text {\n      font-size: 12px;\n      color: #6B7280;\n      margin: 0;\n      line-height: 1.4;\n    }\n  "
            ],
            "template": "<div class=\"input-dropdown-wrapper\">\n  <!-- Label -->\n  <label *ngIf=\"label\" class=\"input-label\">{{ label }}</label>\n\n  <!-- Input field avec dropdown positionné juste en dessous -->\n  <div class=\"input-field-container\">\n    <storybook-input-field\n      [label]=\"''\"\n      [placeholder]=\"placeholder\"\n      [supportingText]=\"''\"\n      [value]=\"selectedValue\"\n      [rightIcon]=\"true\"\n      [leftIcon]=\"leftIcon\"\n      (dropdownClick)=\"toggleDropdown()\"\n    >\n    </storybook-input-field>\n\n    <storybook-dropdown\n      [isOpen]=\"dropdownOpen\"\n      [items]=\"options\"\n      [selectedItem]=\"selectedValue\"\n      (itemSelected)=\"onItemSelected($event)\"\n      (closeDropdown)=\"closeDropdown()\"\n    >\n    </storybook-dropdown>\n  </div>\n\n  <!-- Supporting text en bas -->\n  <p *ngIf=\"supportingText\" class=\"supporting-text\">{{ supportingText }}</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Select option'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLabel du champ",
                    "description": "<p>Label du champ</p>\n",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAfficher l'icône de gauche",
                    "description": "<p>Afficher l&#39;icône de gauche</p>\n",
                    "line": 89,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "['Option 1', 'Option 2', 'Option 3', 'Option 4']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptions du dropdown",
                    "description": "<p>Options du dropdown</p>\n",
                    "line": 85,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Choose an option'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nPlaceholder",
                    "description": "<p>Placeholder</p>\n",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nValeur sélectionnée",
                    "description": "<p>Valeur sélectionnée</p>\n",
                    "line": 93,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "supportingText",
                    "defaultValue": "'Click the arrow to expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTexte de support",
                    "description": "<p>Texte de support</p>\n",
                    "line": 81,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénement de sélection",
                    "description": "<p>Événement de sélection</p>\n",
                    "line": 100,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>État du dropdown</p>\n",
                    "line": 96,
                    "rawdescription": "\nÉtat du dropdown"
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onItemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "PlaceholderComponent",
                    "type": "component"
                },
                {
                    "name": "DropdownComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { PlaceholderComponent } from './placeholder.component';\nimport { DropdownComponent } from './dropdown.component';\n\n@Component({\n  selector: 'storybook-input-dropdown',\n  standalone: true,\n  imports: [CommonModule, PlaceholderComponent, DropdownComponent],\n  template: `\n    <div class=\"input-dropdown-wrapper\">\n      <!-- Label -->\n      <label *ngIf=\"label\" class=\"input-label\">{{ label }}</label>\n      \n      <!-- Input field avec dropdown positionné juste en dessous -->\n      <div class=\"input-field-container\">\n        <storybook-input-field\n          [label]=\"''\"\n          [placeholder]=\"placeholder\"\n          [supportingText]=\"''\"\n          [value]=\"selectedValue\"\n          [rightIcon]=\"true\"\n          [leftIcon]=\"leftIcon\"\n          (dropdownClick)=\"toggleDropdown()\"\n        >\n        </storybook-input-field>\n        \n        <storybook-dropdown\n          [isOpen]=\"dropdownOpen\"\n          [items]=\"options\"\n          [selectedItem]=\"selectedValue\"\n          (itemSelected)=\"onItemSelected($event)\"\n          (closeDropdown)=\"closeDropdown()\"\n        >\n        </storybook-dropdown>\n      </div>\n      \n      <!-- Supporting text en bas -->\n      <p *ngIf=\"supportingText\" class=\"supporting-text\">{{ supportingText }}</p>\n    </div>\n  `,\n  styles: [`\n    .input-dropdown-wrapper {\n      width: 368px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n    }\n    \n    .input-label {\n      font-size: 14px;\n      font-weight: 500;\n      color: #111827;\n      margin: 0 0 8px 0;\n      display: block;\n      line-height: 1.4;\n    }\n    \n    .input-field-container {\n      position: relative;\n      margin-bottom: 8px;\n    }\n    \n    .supporting-text {\n      font-size: 12px;\n      color: #6B7280;\n      margin: 0;\n      line-height: 1.4;\n    }\n  `],\n})\nexport class InputDropdownComponent {\n  /** Label du champ */\n  @Input()\n  label: string = 'Select option';\n\n  /** Placeholder */\n  @Input()\n  placeholder: string = 'Choose an option';\n\n  /** Texte de support */\n  @Input()\n  supportingText: string = 'Click the arrow to expand';\n\n  /** Options du dropdown */\n  @Input()\n  options: string[] = ['Option 1', 'Option 2', 'Option 3', 'Option 4'];\n\n  /** Afficher l'icône de gauche */\n  @Input()\n  leftIcon: boolean = true;\n\n  /** Valeur sélectionnée */\n  @Input()\n  selectedValue: string = '';\n\n  /** État du dropdown */\n  dropdownOpen: boolean = false;\n\n  /** Événement de sélection */\n  @Output()\n  selectionChange = new EventEmitter<string>();\n\n  toggleDropdown(): void {\n    this.dropdownOpen = !this.dropdownOpen;\n    console.log('Dropdown toggled:', this.dropdownOpen); // Debug\n  }\n\n  closeDropdown(): void {\n    this.dropdownOpen = false;\n  }\n\n  onItemSelected(item: string): void {\n    this.selectedValue = item;\n    this.selectionChange.emit(item);\n    console.log('Item selected:', item); // Debug\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .input-dropdown-wrapper {\n      width: 368px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n    }\n    \n    .input-label {\n      font-size: 14px;\n      font-weight: 500;\n      color: #111827;\n      margin: 0 0 8px 0;\n      display: block;\n      line-height: 1.4;\n    }\n    \n    .input-field-container {\n      position: relative;\n      margin-bottom: 8px;\n    }\n    \n    .supporting-text {\n      font-size: 12px;\n      color: #6B7280;\n      margin: 0;\n      line-height: 1.4;\n    }\n  \n",
            "extends": []
        },
        {
            "name": "NavigationBarComponent",
            "id": "component-NavigationBarComponent-12d68265e03b3d6ecf2227ff2f2de12b2b6a2a9c30463857bcc2b6ed09f0edd75becb7112481f869625b31a2f658936c6040db469b50b2ca18e5300220d3065c",
            "file": "src/stories/Planexa/navigation-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-navigation-bar",
            "styleUrls": [
                "./navigation-bar.component.css"
            ],
            "styles": [],
            "template": "<div class=\"navigation-bar\">\n  <!-- Section gauche : Titre et navigation -->\n  <div class=\"left-section\">\n    <h2 class=\"title\">{{ config.title }}</h2>\n    <div class=\"nav-buttons\">\n      <button\n        class=\"nav-button nav-button--left\"\n        (click)=\"onPreviousClick()\"\n        [attr.aria-label]=\"'Période précédente'\"\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n          <path d=\"M10.75 12.25L10.131 11.6312L6.894 8.375H14.5V7.125H6.894L10.131 3.8687L10.75 3.25L6.5 7L10.75 12.25Z\" fill=\"currentColor\"/>\n        </svg>\n      </button>\n      <button\n        class=\"nav-button nav-button--right\"\n        (click)=\"onNextClick()\"\n        [attr.aria-label]=\"'Période suivante'\"\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n          <path d=\"M5.25 3.75L5.869 4.3687L9.106 7.625H1.5V8.875H9.106L5.869 12.1312L5.25 12.75L9.5 9L5.25 3.75Z\" fill=\"currentColor\"/>\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <!-- Section centre : Contrôle segmenté -->\n  <div class=\"center-section\">\n    <storybook-segmented-control\n      [tabs]=\"config.viewModes\"\n      [activeTabId]=\"config.activeViewMode\"\n      [width]=\"300\"\n      (tabChange)=\"onViewModeChange($event)\"\n    ></storybook-segmented-control>\n  </div>\n\n  <!-- Section droite : Boutons d'action -->\n  <div class=\"right-section\">\n    <button\n      *ngIf=\"config.showTodayButton\"\n      class=\"action-button action-button--secondary\"\n      (click)=\"onTodayClick()\"\n    >\n      {{ config.todayButtonText || 'Aujourd'hui' }}\n    </button>\n\n    <button\n      *ngIf=\"config.showPrimaryButton\"\n      class=\"action-button action-button--primary\"\n      (click)=\"onPrimaryButtonClick()\"\n    >\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" class=\"button-icon\">\n        <circle cx=\"8\" cy=\"8\" r=\"7.25\" stroke=\"currentColor\" stroke-width=\"1.5\"/>\n        <path d=\"M8 4.5V11.5M4.5 8H11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n      </svg>\n      {{ config.primaryButtonText || 'Nouveau RDV' }}\n    </button>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    title: 'Juillet 2025',\n    viewModes: [\n      { id: 'month', label: 'Mois', icon: false },\n      { id: 'week', label: 'Semaine', icon: false },\n      { id: 'day', label: 'Jour', icon: false }\n    ],\n    activeViewMode: 'month',\n    showTodayButton: true,\n    todayButtonText: 'Aujourd\\'hui',\n    primaryButtonText: 'Nouveau RDV',\n    showPrimaryButton: true\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nConfiguration de la barre de navigation",
                    "description": "<p>Configuration de la barre de navigation</p>\n",
                    "line": 85,
                    "type": "NavigationBarConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "EventEmitter"
                },
                {
                    "name": "previousClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénements",
                    "description": "<p>Événements</p>\n",
                    "line": 101,
                    "type": "EventEmitter"
                },
                {
                    "name": "primaryButtonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "EventEmitter"
                },
                {
                    "name": "todayClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "EventEmitter"
                },
                {
                    "name": "viewModeChange",
                    "defaultValue": "new EventEmitter<TabItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onNextClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPreviousClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrimaryButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTodayClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onViewModeChange",
                    "args": [
                        {
                            "name": "tab",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SegmentedControlComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SegmentedControlComponent, TabItem } from './segmented-control.component';\n\nexport interface NavigationBarConfig {\n  title: string;\n  viewModes: TabItem[];\n  activeViewMode: string;\n  showTodayButton?: boolean;\n  todayButtonText?: string;\n  primaryButtonText?: string;\n  showPrimaryButton?: boolean;\n}\n\n@Component({\n  selector: 'storybook-navigation-bar',\n  standalone: true,\n  imports: [CommonModule, SegmentedControlComponent],\n  template: `\n    <div class=\"navigation-bar\">\n      <!-- Section gauche : Titre et navigation -->\n      <div class=\"left-section\">\n        <h2 class=\"title\">{{ config.title }}</h2>\n        <div class=\"nav-buttons\">\n          <button \n            class=\"nav-button nav-button--left\" \n            (click)=\"onPreviousClick()\"\n            [attr.aria-label]=\"'Période précédente'\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M10.75 12.25L10.131 11.6312L6.894 8.375H14.5V7.125H6.894L10.131 3.8687L10.75 3.25L6.5 7L10.75 12.25Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n          <button \n            class=\"nav-button nav-button--right\" \n            (click)=\"onNextClick()\"\n            [attr.aria-label]=\"'Période suivante'\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M5.25 3.75L5.869 4.3687L9.106 7.625H1.5V8.875H9.106L5.869 12.1312L5.25 12.75L9.5 9L5.25 3.75Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <!-- Section centre : Contrôle segmenté -->\n      <div class=\"center-section\">\n        <storybook-segmented-control\n          [tabs]=\"config.viewModes\"\n          [activeTabId]=\"config.activeViewMode\"\n          [width]=\"300\"\n          (tabChange)=\"onViewModeChange($event)\"\n        ></storybook-segmented-control>\n      </div>\n\n      <!-- Section droite : Boutons d'action -->\n      <div class=\"right-section\">\n        <button \n          *ngIf=\"config.showTodayButton\" \n          class=\"action-button action-button--secondary\"\n          (click)=\"onTodayClick()\"\n        >\n          {{ config.todayButtonText || 'Aujourd\\'hui' }}\n        </button>\n        \n        <button \n          *ngIf=\"config.showPrimaryButton\" \n          class=\"action-button action-button--primary\"\n          (click)=\"onPrimaryButtonClick()\"\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" class=\"button-icon\">\n            <circle cx=\"8\" cy=\"8\" r=\"7.25\" stroke=\"currentColor\" stroke-width=\"1.5\"/>\n            <path d=\"M8 4.5V11.5M4.5 8H11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n          </svg>\n          {{ config.primaryButtonText || 'Nouveau RDV' }}\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./navigation-bar.component.css'],\n})\nexport class NavigationBarComponent {\n  /** Configuration de la barre de navigation */\n  @Input()\n  config: NavigationBarConfig = {\n    title: 'Juillet 2025',\n    viewModes: [\n      { id: 'month', label: 'Mois', icon: false },\n      { id: 'week', label: 'Semaine', icon: false },\n      { id: 'day', label: 'Jour', icon: false }\n    ],\n    activeViewMode: 'month',\n    showTodayButton: true,\n    todayButtonText: 'Aujourd\\'hui',\n    primaryButtonText: 'Nouveau RDV',\n    showPrimaryButton: true\n  };\n\n  /** Événements */\n  @Output()\n  previousClick = new EventEmitter<void>();\n\n  @Output()\n  nextClick = new EventEmitter<void>();\n\n  @Output()\n  viewModeChange = new EventEmitter<TabItem>();\n\n  @Output()\n  todayClick = new EventEmitter<void>();\n\n  @Output()\n  primaryButtonClick = new EventEmitter<void>();\n\n  onPreviousClick(): void {\n    this.previousClick.emit();\n  }\n\n  onNextClick(): void {\n    this.nextClick.emit();\n  }\n\n  onViewModeChange(tab: TabItem): void {\n    this.config.activeViewMode = tab.id;\n    this.viewModeChange.emit(tab);\n  }\n\n  onTodayClick(): void {\n    this.todayClick.emit();\n  }\n\n  onPrimaryButtonClick(): void {\n    this.primaryButtonClick.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navigation-bar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 0;\n  background: white;\n  border-bottom: 1px solid #E5E5E5;\n  min-height: 68px;\n  font-family: system-ui, -apple-system, sans-serif;\n}\n\n/* Section gauche */\n.left-section {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.title {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: #334155;\n  line-height: 1.5;\n}\n\n.nav-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.nav-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border: none;\n  border-radius: 8px;\n  background: #F1F5F9;\n  color: #334155;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.nav-button:hover {\n  background: #E2E8F0;\n  transform: translateY(-1px);\n}\n\n.nav-button:active {\n  transform: translateY(0);\n  background: #CBD5E1;\n}\n\n.nav-button:focus {\n  outline: 2px solid #4338CA;\n  outline-offset: 2px;\n}\n\n/* Section centre */\n.center-section {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n/* Section droite */\n.right-section {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.action-button {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 16px;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  line-height: 1.4;\n  white-space: nowrap;\n}\n\n.action-button--secondary {\n  background: #E0E7FF;\n  color: #4338CA;\n  border: 1px solid transparent;\n}\n\n.action-button--secondary:hover {\n  background: #C7D2FE;\n  transform: translateY(-1px);\n}\n\n.action-button--secondary:active {\n  transform: translateY(0);\n  background: #A5B4FC;\n}\n\n.action-button--primary {\n  background: #4338CA;\n  color: white;\n  border: 1px solid transparent;\n}\n\n.action-button--primary:hover {\n  background: #3730A3;\n  transform: translateY(-1px);\n}\n\n.action-button--primary:active {\n  transform: translateY(0);\n  background: #312E81;\n}\n\n.action-button:focus {\n  outline: 2px solid #4338CA;\n  outline-offset: 2px;\n}\n\n.button-icon {\n  width: 16px;\n  height: 16px;\n  flex-shrink: 0;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .navigation-bar {\n    flex-direction: column;\n    gap: 16px;\n    padding: 16px;\n  }\n\n  .left-section, .right-section {\n    justify-content: center;\n  }\n\n  .center-section {\n    order: -1;\n    max-width: none;\n    width: 100%;\n  }\n\n  .title {\n    font-size: 18px;\n  }\n}\n\n@media (max-width: 480px) {\n  .right-section {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .action-button {\n    width: 100%;\n    justify-content: center;\n  }\n}\n",
                    "styleUrl": "./navigation-bar.component.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PlaceholderComponent",
            "id": "component-PlaceholderComponent-50485a9345d918276238f2c9130553d14453c078801fecc71b2ff32069e0c646825055067e716f0f0845db2c1e54b79818ca3a4c7f8b004a55f4ff095c1ed637",
            "file": "src/stories/Planexa/placeholder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-input-field",
            "styleUrls": [
                "./placeholder.component.css"
            ],
            "styles": [],
            "template": "<div class=\"input-field-container\">\n  <!-- Label -->\n  <label *ngIf=\"label\" class=\"input-label\" [for]=\"inputId\">\n    {{ label }}\n  </label>\n\n  <!-- Input container avec icônes -->\n  <div class=\"input-wrapper\">\n    <!-- Icône de gauche -->\n    <div *ngIf=\"leftIcon\" class=\"input-icon left-icon\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n        <path d=\"M8 8C9.65685 8 11 6.65685 11 5C11 3.34315 9.65685 2 8 2C6.34315 2 5 3.34315 5 5C5 6.65685 6.34315 8 8 8Z\" fill=\"#6B7280\"/>\n        <path d=\"M8 9C5.23858 9 3 11.2386 3 14H13C13 11.2386 10.7614 9 8 9Z\" fill=\"#6B7280\"/>\n      </svg>\n    </div>\n\n    <!-- Input field -->\n    <input\n      [id]=\"inputId\"\n      class=\"input-field\"\n      [type]=\"type\"\n      [placeholder]=\"placeholder\"\n      [value]=\"value\"\n      [disabled]=\"disabled\"\n      (input)=\"onInput($event)\"\n      (focus)=\"onFocus($event)\"\n      (blur)=\"onBlur($event)\"\n    />\n\n    <!-- Icône de droite (dropdown) -->\n    <div *ngIf=\"rightIcon\" class=\"input-icon right-icon\" (click)=\"onDropdownClick()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n        <path d=\"M4 6L8 10L12 6\" stroke=\"#6B7280\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n    </div>\n  </div>\n\n  <!-- Supporting text -->\n  <p *ngIf=\"supportingText\" class=\"supporting-text\">\n    {{ supportingText }}\n  </p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉtat désactivé",
                    "description": "<p>État désactivé</p>\n",
                    "line": 77,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "defaultValue": "'input-' + Math.random().toString(36).substr(2, 9)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nID unique pour l'input",
                    "description": "<p>ID unique pour l&#39;input</p>\n",
                    "line": 89,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Input title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLabel au-dessus du champ",
                    "description": "<p>Label au-dessus du champ</p>\n",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAfficher l'icône de gauche",
                    "description": "<p>Afficher l&#39;icône de gauche</p>\n",
                    "line": 81,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Placeholder'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTexte placeholder dans l'input",
                    "description": "<p>Texte placeholder dans l&#39;input</p>\n",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAfficher l'icône de droite (dropdown)",
                    "description": "<p>Afficher l&#39;icône de droite (dropdown)</p>\n",
                    "line": 85,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "supportingText",
                    "defaultValue": "'Supporting text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTexte de support en dessous",
                    "description": "<p>Texte de support en dessous</p>\n",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nType d'input",
                    "description": "<p>Type d&#39;input</p>\n",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nValeur du champ",
                    "description": "<p>Valeur du champ</p>\n",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dropdownClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "EventEmitter"
                },
                {
                    "name": "inputBlur",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter"
                },
                {
                    "name": "inputFocus",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénements",
                    "description": "<p>Événements</p>\n",
                    "line": 93,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDropdownClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-input-field',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"input-field-container\">\n      <!-- Label -->\n      <label *ngIf=\"label\" class=\"input-label\" [for]=\"inputId\">\n        {{ label }}\n      </label>\n      \n      <!-- Input container avec icônes -->\n      <div class=\"input-wrapper\">\n        <!-- Icône de gauche -->\n        <div *ngIf=\"leftIcon\" class=\"input-icon left-icon\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M8 8C9.65685 8 11 6.65685 11 5C11 3.34315 9.65685 2 8 2C6.34315 2 5 3.34315 5 5C5 6.65685 6.34315 8 8 8Z\" fill=\"#6B7280\"/>\n            <path d=\"M8 9C5.23858 9 3 11.2386 3 14H13C13 11.2386 10.7614 9 8 9Z\" fill=\"#6B7280\"/>\n          </svg>\n        </div>\n        \n        <!-- Input field -->\n        <input \n          [id]=\"inputId\"\n          class=\"input-field\"\n          [type]=\"type\"\n          [placeholder]=\"placeholder\"\n          [value]=\"value\"\n          [disabled]=\"disabled\"\n          (input)=\"onInput($event)\"\n          (focus)=\"onFocus($event)\"\n          (blur)=\"onBlur($event)\"\n        />\n        \n        <!-- Icône de droite (dropdown) -->\n        <div *ngIf=\"rightIcon\" class=\"input-icon right-icon\" (click)=\"onDropdownClick()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M4 6L8 10L12 6\" stroke=\"#6B7280\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n        </div>\n      </div>\n      \n      <!-- Supporting text -->\n      <p *ngIf=\"supportingText\" class=\"supporting-text\">\n        {{ supportingText }}\n      </p>\n    </div>\n  `,\n  styleUrls: ['./placeholder.component.css'],\n})\nexport class PlaceholderComponent {\n  /** Label au-dessus du champ */\n  @Input()\n  label: string = 'Input title';\n\n  /** Texte placeholder dans l'input */\n  @Input()\n  placeholder: string = 'Placeholder';\n\n  /** Texte de support en dessous */\n  @Input()\n  supportingText: string = 'Supporting text';\n\n  /** Valeur du champ */\n  @Input()\n  value: string = '';\n\n  /** Type d'input */\n  @Input()\n  type: string = 'text';\n\n  /** État désactivé */\n  @Input()\n  disabled: boolean = false;\n\n  /** Afficher l'icône de gauche */\n  @Input()\n  leftIcon: boolean = true;\n\n  /** Afficher l'icône de droite (dropdown) */\n  @Input()\n  rightIcon: boolean = true;\n\n  /** ID unique pour l'input */\n  @Input()\n  inputId: string = 'input-' + Math.random().toString(36).substr(2, 9);\n\n  /** Événements */\n  @Output()\n  valueChange = new EventEmitter<string>();\n\n  @Output()\n  inputFocus = new EventEmitter<Event>();\n\n  @Output()\n  inputBlur = new EventEmitter<Event>();\n\n  @Output()\n  dropdownClick = new EventEmitter<void>();\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.valueChange.emit(this.value);\n  }\n\n  onFocus(event: Event): void {\n    this.inputFocus.emit(event);\n  }\n\n  onBlur(event: Event): void {\n    this.inputBlur.emit(event);\n  }\n\n  onDropdownClick(): void {\n    this.dropdownClick.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Input Field Component - Basé sur le design Figma */\n\n.input-field-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 368px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n}\n\n/* Label */\n.input-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  margin: 0;\n  line-height: 1.4;\n}\n\n/* Container de l'input avec icônes */\n.input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n/* Champ input principal */\n.input-field {\n  width: 100%;\n  height: 44px;\n  padding: 12px 40px 12px 40px; /* Espace pour les icônes */\n  border: 1px solid #D1D5DB;\n  border-radius: 8px;\n  font-size: 14px;\n  color: #111827;\n  background-color: #FFFFFF;\n  transition: all 0.2s ease-in-out;\n  outline: none;\n  box-sizing: border-box;\n}\n\n.input-field::placeholder {\n  color: #9CA3AF;\n  font-size: 14px;\n}\n\n/* États de focus */\n.input-field:focus {\n  border-color: #3B82F6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.input-field:hover:not(:focus) {\n  border-color: #9CA3AF;\n}\n\n/* État disabled */\n.input-field:disabled {\n  background-color: #F9FAFB;\n  color: #9CA3AF;\n  cursor: not-allowed;\n}\n\n/* Icônes */\n.input-icon {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  z-index: 1;\n}\n\n.left-icon {\n  left: 12px;\n}\n\n.right-icon {\n  right: 12px;\n  cursor: pointer;\n  transition: opacity 0.2s ease;\n}\n\n.right-icon:hover {\n  opacity: 0.7;\n}\n\n/* Supporting text */\n.supporting-text {\n  font-size: 12px;\n  color: #6B7280;\n  margin: 0;\n  line-height: 1.4;\n}\n\n/* États d'erreur */\n.input-field-container.error .input-field {\n  border-color: #EF4444;\n}\n\n.input-field-container.error .input-field:focus {\n  border-color: #EF4444;\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n}\n\n.input-field-container.error .supporting-text {\n  color: #EF4444;\n}\n\n/* États de succès */\n.input-field-container.success .input-field {\n  border-color: #10B981;\n}\n\n.input-field-container.success .input-field:focus {\n  border-color: #10B981;\n  box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);\n}\n\n.input-field-container.success .supporting-text {\n  color: #10B981;\n}\n\n/* Variantes de taille */\n.input-field-container.small {\n  width: 280px;\n}\n\n.input-field-container.small .input-field {\n  height: 36px;\n  padding: 8px 32px 8px 32px;\n  font-size: 13px;\n}\n\n.input-field-container.large {\n  width: 480px;\n}\n\n.input-field-container.large .input-field {\n  height: 52px;\n  padding: 16px 48px 16px 48px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./placeholder.component.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SegmentedControlComponent",
            "id": "component-SegmentedControlComponent-7978fde189c8389e6653da016a147a6ca0c5f62d9d24ce13eb6bba0b5b583cf24302340d8e20c63797570f6a954316c0f8125d5cc079cc6d951abadcac947c52",
            "file": "src/stories/Planexa/segmented-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-segmented-control",
            "styleUrls": [
                "./segmented-control.component.css"
            ],
            "styles": [],
            "template": "<div class=\"segmented-control\" [style.width.px]=\"width\">\n  <div\n    *ngFor=\"let tab of tabs; trackBy: trackByFn; let i = index\"\n    class=\"segment\"\n    [class.active]=\"tab.id === activeTabId\"\n    [class.disabled]=\"tab.disabled\"\n    (click)=\"selectTab(tab)\"\n    [attr.data-testid]=\"'segment-' + tab.id\"\n  >\n    <!-- Icône hexagonale -->\n    <div *ngIf=\"tab.icon !== false\" class=\"segment-icon\">\n      <!-- Icône Calendrier -->\n      <svg *ngIf=\"tab.icon === 'calendar'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n        <path d=\"M4 1V3M12 1V3M2 5H14M3 3H13C13.5523 3 14 3.44772 14 4V13C14 13.5523 13.5523 14 13 14H3C2.44772 14 2 13.5523 2 13V4C2 3.44772 2.44772 3 3 3Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <circle cx=\"6\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n        <circle cx=\"10\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n        <circle cx=\"6\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n        <circle cx=\"10\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n      </svg>\n\n      <!-- Icône Patient -->\n      <svg *ngIf=\"tab.icon === 'patient'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n        <circle cx=\"8\" cy=\"4\" r=\"2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\"/>\n        <path d=\"M3 14C3 11.2386 5.23858 9 8 9C10.7614 9 13 11.2386 13 14\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n        <path d=\"M7 12H9M8 11V13\" stroke=\"currentColor\" stroke-width=\"1.2\" stroke-linecap=\"round\"/>\n      </svg>\n\n      <!-- Icône Hexagonale (original) -->\n      <svg *ngIf=\"tab.icon === 'hexagon' || tab.icon === true\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n        <path d=\"M8.252 4.0679L2.252 0.567901C2.17554 0.523334 2.08859 0.499756 2 0.499756C1.91141 0.499756 1.82446 0.523334 1.748 0.567901L-4.252 4.0679C-4.32754 4.11196 -4.39013 4.17496 -4.43363 4.25084C-4.47714 4.32672 -4.5 4.41254 -4.5 4.4999V11.4999C-4.5 11.5873 -4.47714 11.6732 -4.43363 11.749C-4.39013 11.8248 -4.32754 11.8879 -4.252 11.9319L1.748 15.4319C1.82446 15.4765 1.91141 15.5001 2 15.5001C2.08859 15.5001 2.17554 15.4765 2.252 15.4319L8.252 11.9319C8.32754 11.8879 8.39013 11.8248 8.43363 11.749C8.47714 11.6732 8.5 11.5873 8.5 11.4999V4.4999C8.5 4.41254 8.47714 4.32672 8.43363 4.25084C8.39013 4.17496 8.32754 4.11196 8.252 4.0679ZM2 1.5789L7.008 4.4999L2 7.4209L-3.008 4.4999L2 1.5789ZM-3.5 5.3699L1.5 8.2864V14.1299L-3.5 11.2129V5.3699ZM2.5 14.1299V8.2869L7.5 5.3704V11.2129L2.5 14.1299Z\" fill=\"currentColor\"/>\n      </svg>\n    </div>\n\n    <!-- Label du segment -->\n    <span class=\"segment-label\">{{ tab.label }}</span>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTabId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nID de l'onglet actif",
                    "description": "<p>ID de l&#39;onglet actif</p>\n",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[\n    { id: 'segment1', label: 'Calendrier', icon: 'calendar' },\n    { id: 'segment2', label: 'Patient', icon: 'patient' },\n    { id: 'segment3', label: 'Hexagone', icon: 'hexagon' },\n    { id: 'segment4', label: 'Sans icône', icon: false }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListe des onglets",
                    "description": "<p>Liste des onglets</p>\n",
                    "line": 59,
                    "type": "TabItem[]",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "850",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLargeur du composant",
                    "description": "<p>Largeur du composant</p>\n",
                    "line": 72,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabChange",
                    "defaultValue": "new EventEmitter<TabItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nÉvénement de changement d'onglet",
                    "description": "<p>Événement de changement d&#39;onglet</p>\n",
                    "line": 76,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "TabItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\nexport interface TabItem {\n  id: string;\n  label: string;\n  icon?: 'calendar' | 'patient' | 'hexagon' | false;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'storybook-segmented-control',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"segmented-control\" [style.width.px]=\"width\">\n      <div \n        *ngFor=\"let tab of tabs; trackBy: trackByFn; let i = index\"\n        class=\"segment\"\n        [class.active]=\"tab.id === activeTabId\"\n        [class.disabled]=\"tab.disabled\"\n        (click)=\"selectTab(tab)\"\n        [attr.data-testid]=\"'segment-' + tab.id\"\n      >\n        <!-- Icône hexagonale -->\n        <div *ngIf=\"tab.icon !== false\" class=\"segment-icon\">\n          <!-- Icône Calendrier -->\n          <svg *ngIf=\"tab.icon === 'calendar'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M4 1V3M12 1V3M2 5H14M3 3H13C13.5523 3 14 3.44772 14 4V13C14 13.5523 13.5523 14 13 14H3C2.44772 14 2 13.5523 2 13V4C2 3.44772 2.44772 3 3 3Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <circle cx=\"6\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"10\" cy=\"8\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"6\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n            <circle cx=\"10\" cy=\"11\" r=\"0.5\" fill=\"currentColor\"/>\n          </svg>\n          \n          <!-- Icône Patient -->\n          <svg *ngIf=\"tab.icon === 'patient'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <circle cx=\"8\" cy=\"4\" r=\"2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\"/>\n            <path d=\"M3 14C3 11.2386 5.23858 9 8 9C10.7614 9 13 11.2386 13 14\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n            <path d=\"M7 12H9M8 11V13\" stroke=\"currentColor\" stroke-width=\"1.2\" stroke-linecap=\"round\"/>\n          </svg>\n          \n          <!-- Icône Hexagonale (original) -->\n          <svg *ngIf=\"tab.icon === 'hexagon' || tab.icon === true\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path d=\"M8.252 4.0679L2.252 0.567901C2.17554 0.523334 2.08859 0.499756 2 0.499756C1.91141 0.499756 1.82446 0.523334 1.748 0.567901L-4.252 4.0679C-4.32754 4.11196 -4.39013 4.17496 -4.43363 4.25084C-4.47714 4.32672 -4.5 4.41254 -4.5 4.4999V11.4999C-4.5 11.5873 -4.47714 11.6732 -4.43363 11.749C-4.39013 11.8248 -4.32754 11.8879 -4.252 11.9319L1.748 15.4319C1.82446 15.4765 1.91141 15.5001 2 15.5001C2.08859 15.5001 2.17554 15.4765 2.252 15.4319L8.252 11.9319C8.32754 11.8879 8.39013 11.8248 8.43363 11.749C8.47714 11.6732 8.5 11.5873 8.5 11.4999V4.4999C8.5 4.41254 8.47714 4.32672 8.43363 4.25084C8.39013 4.17496 8.32754 4.11196 8.252 4.0679ZM2 1.5789L7.008 4.4999L2 7.4209L-3.008 4.4999L2 1.5789ZM-3.5 5.3699L1.5 8.2864V14.1299L-3.5 11.2129V5.3699ZM2.5 14.1299V8.2869L7.5 5.3704V11.2129L2.5 14.1299Z\" fill=\"currentColor\"/>\n          </svg>\n        </div>\n        \n        <!-- Label du segment -->\n        <span class=\"segment-label\">{{ tab.label }}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./segmented-control.component.css'],\n})\nexport class SegmentedControlComponent {\n  /** Liste des onglets */\n  @Input()\n  tabs: TabItem[] = [\n    { id: 'segment1', label: 'Calendrier', icon: 'calendar' },\n    { id: 'segment2', label: 'Patient', icon: 'patient' },\n    { id: 'segment3', label: 'Hexagone', icon: 'hexagon' },\n    { id: 'segment4', label: 'Sans icône', icon: false }\n  ];\n\n  /** ID de l'onglet actif */\n  @Input()\n  activeTabId?: string;\n\n  /** Largeur du composant */\n  @Input()\n  width: number = 850;\n\n  /** Événement de changement d'onglet */\n  @Output()\n  tabChange = new EventEmitter<TabItem>();\n\n  ngOnInit() {\n    // Sélectionner le premier onglet par défaut si aucun n'est actif\n    if (!this.activeTabId && this.tabs.length > 0) {\n      this.activeTabId = this.tabs[0].id;\n    }\n  }\n\n  selectTab(tab: TabItem): void {\n    if (tab.disabled) return;\n    \n    this.activeTabId = tab.id;\n    this.tabChange.emit(tab);\n  }\n\n  trackByFn(index: number, item: TabItem): string {\n    return item.id;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Segmented Control Component - Basé sur le SVG fourni */\n\n.segmented-control {\n  display: flex;\n  background: #F8FAFC;\n  border: 1px solid #E5E5E5;\n  border-radius: 28px; /* Coins très arrondis comme dans le SVG */\n  padding: 4px;\n  height: 56px;\n  width: 850px;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n}\n\n.segment {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border-radius: 24px; /* Coins arrondis pour les segments internes */\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  color: #334155;\n  font-size: 14px;\n  font-weight: 500;\n  user-select: none;\n  position: relative;\n  background: transparent;\n}\n\n.segment:hover:not(.disabled):not(.active) {\n  background: rgba(51, 65, 85, 0.05);\n}\n\n.segment.active {\n  background: #FFFFFF;\n  color: #334155;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);\n  font-weight: 600;\n}\n\n.segment.disabled {\n  color: #94A3B8;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.segment-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  color: inherit;\n  flex-shrink: 0; /* Empêche la compression de l'icône */\n}\n\n.segment-icon svg {\n  width: 16px;\n  height: 16px;\n  fill: currentColor;\n  display: block; /* Évite les espaces indésirables */\n}\n\n.segment-label {\n  line-height: 1.4;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* États de focus pour l'accessibilité */\n.segment:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px #3B82F6, 0 0 0 4px rgba(59, 130, 246, 0.2);\n}\n\n.segment.active:focus {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06), 0 0 0 2px #3B82F6, 0 0 0 4px rgba(59, 130, 246, 0.2);\n}\n\n/* Variantes de taille */\n.segmented-control.compact {\n  height: 40px;\n  border-radius: 20px;\n}\n\n.segmented-control.compact .segment {\n  padding: 8px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n}\n\n.segmented-control.large {\n  height: 64px;\n  border-radius: 32px;\n}\n\n.segmented-control.large .segment {\n  padding: 16px 20px;\n  border-radius: 28px;\n  font-size: 16px;\n}\n\n/* Animation de transition entre segments actifs */\n.segment {\n  transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .segmented-control {\n    width: 100%;\n    max-width: 100%;\n  }\n  \n  .segment-label {\n    font-size: 13px;\n  }\n  \n  .segment {\n    padding: 12px 8px;\n    gap: 6px;\n  }\n}\n",
                    "styleUrl": "./segmented-control.component.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 25,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/Planexa/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "src/stories/Planexa/input-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDropdownComponent",
                "coveragePercent": 66,
                "coverageCount": "8/12",
                "status": "good"
            },
            {
                "filePath": "src/stories/Planexa/navigation-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationBarComponent",
                "coveragePercent": 16,
                "coverageCount": "2/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/Planexa/navigation-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationBarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/Planexa/placeholder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlaceholderComponent",
                "coveragePercent": 55,
                "coverageCount": "10/18",
                "status": "good"
            },
            {
                "filePath": "src/stories/Planexa/segmented-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SegmentedControlComponent",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "src/stories/Planexa/segmented-control.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}